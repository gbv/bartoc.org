<%- include('header', {
  button: `<a v-cloak v-if="userCanAdd" style="float:right" class="btn btn-success" href="/edit?uri=${item.uri}">edit</a>`
}) %>

<!-- TODO: merge with registry.ejs -->

<ul class="nav nav-tabs" id="vocabulary-tabs" role="tablist">
  <li class="nav-item" role="presentation">
    <a class="nav-link active" data-toggle="tab" href="#about" role="tab" aria-controls="about" aria-selected="true" onclick="changeTab(0);">About</a>
  </li>
  <li class="nav-item" role="presentation">
    <a class="nav-link" data-toggle="tab" href="#access" role="tab" aria-controls="access" aria-selected="false" onclick="changeTab(1);">Access</a>
  </li>
  <li class="nav-item" role="presentation">
    <a class="nav-link" data-toggle="tab" href="#content" role="tab" aria-controls="content" aria-selected="false" onclick="changeTab(2);">Content</a>
  </li>
  <li class="nav-item" role="presentation">
    <a class="nav-link" data-toggle="tab" href="#identifiers" role="tab" aria-controls="identifiers" aria-selected="false" onclick="changeTab(3);">Identifiers</a>
  </li>
</ul>
<div class="tab-content p-3" id="vocabulary-tabs-content">
  <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="home-tab">
    <%- include('abstract', { abstract: item.definition }) %>
    <table class="table table-borderless">
      <%  var titles = Object.values(item.prefLabel || {}).concat(...Object.values(item.altLabel || {})) %>
      <%- include('row-list', { label: 'Titles', list: titles }) %>
      <%- include('row-list', { label: 'Abbreviation', list: item.notation }) %>
      <%- include('row-list', { label: 'KOS Type', list: item.type.slice(1), style: 'inline',
        view: item => include('item', { item: nkostypes[item], base: '/vocabularies?type=' }) }) %>
      <%- include('row-list', { label: 'Links', list: item.subjectOf, view: s => include('link', s) }) %>
      <%- include('row-list', { label: 'Subject', list: item.subject, style: 'inline',
        view: s => include('item', { item: s, base: '/vocabularies?subject=', withNotation: true }) }) %>
      <%- include('row-list', { icon: 'language', label: 'Languages', list: item.languages, style: 'inline' }) %>
      <%- include('row', { icon: 'calendar', label: 'Created', content: item.startDate }) %>
      <%- include('row', { icon: 'calendar', label: 'Dissolved', content: item.endDate }) %>
      <%- include('row', { icon: 'link', label: 'URI', content: include('link', { url: item.uri })}) %>
      <%- include('row', { icon: 'home', label: 'Homepage', content: include('link', { url: item.url })}) %>
      <!-- TODO: rating -->
    </table>
  </div>
  <div class="tab-pane fade" role="tabpanel" aria-labelledby="access-tab">
    <table class="table table-borderless">
      <%- include('row-list', { label: 'Access', list: item.ACCESS, style: "inline",
        view: s => include('item', { item: accesstypes[s.uri] || { uri: s.uri }})}) %>
      <%- include('row-list', { label: 'License', list: item.license, style: "inline",
        view: item => include('item', { item, base: '/vocabularies?license=' }) }) %>
      <%- include('row-list', { label: 'Format', list: item.FORMAT, style: 'inline',
        view: s => include('item', { item: formats[s.uri] || { uri: s.uri }})}) %>
      <%- include('row-list', { label: 'Publisher', list: item.publisher,
        view: item => include('item', { item }) }) %>
      <%  var address = []
        if (item.ADDRESS) {
          for(let field of ['street','ext','locality','region','code','country']) {
            if (item.ADDRESS[field]) address.push(item.ADDRESS[field])
          }
        }
      %>
      <%- include('row-list', { label: 'Address', list: address }) %>
      <%- include('row', { label: 'Contact', content: item.CONTACT }) %>
      <%- include('row-list', { label: 'Listed in', list: item.partOf,
        view: s => include('item', { item: registries[s.uri] || { uri: s.uri } })  }) %>
      <%- include('row-list', { label: 'Services (API)', list: item.API,
        view: s => `<service-link :scheme='{"uri":"${item.uri}"}' :endpoint='${JSON.stringify(s)}'></service-link>` }) %>
   </table>
  </div>
  <div class="tab-pane fade" role="tabpanel" aria-labelledby="content-tab">
    <table class="table table-borderless">
      <%- include('row', { label: 'Size', content: item.extent } ) %>
      <%- include('row-list', { label: 'Languages', list: item.languages, style: 'inline' }) %>
    </table>
   <% if (item.API) {
     const scheme = {
       uri: item.uri,
       identifier: item.identifier,
       API: item.API,
       DISPLAY: item.DISPLAY,
       CQLKEY: item.CQLKEY,
       notationPattern: item.notationPattern,
     }
   %>
   <hr>
   <concept-browser :scheme="<%= JSON.stringify(scheme) %>"></concept-browser>
   <% } %>
  </div>
  <div class="tab-pane fade" role="tabpanel" aria-labelledby="identifiers-tab">
    <!-- Identifiers (identifiers, namespace, notation pattern, MARCspec, PICA path, CQL key) -->
    <table class="table table-borderless">
      <%- include('row', { icon: 'link', label: 'URI', content: include('link', { url: item.uri })}) %>
      <%- include('row-list', { label: 'Identifiers', list: item.identifier, link: true }) %>
      <%- include('row', { label: 'Namespace', content: include('link', { url: item.namespace })}) %>
      <%- include('row', { label: 'Notation pattern', content: item.notationPattern }) %>
      <%- include('row', { label: 'URI pattern', content: item.uriPattern }) %>
      <%- include('row-list', { label: 'Examples', list: item.notationExamples }) %>
      <%- include('row', { label: 'MARCspec', content: item.MARCSPEC }) %>
      <%- include('row', { label: 'PICA path', content: item.PICAPATH }) %>
      <%- include('row', { label: 'CQL key', content: item.CQLKEY }) %>
    </table>
  </div>
</div>



<!--
 // TODO: link to Wikipedia
 wikidata = (item.identifier || []).filter(id => id.startsWith("http://www.wikidata.org/entity"))[0]
 if (wikidata) { .. }

 }
-->

<%- include('item-dates') %>

<%- include('footer') %>

<script type="application/javascript">
  // Logic to change Bootstrap tabs
  const lists = {
    get links() {
      return document.getElementById("vocabulary-tabs").querySelectorAll(".nav-link")
    },
    get panes() {
      return document.getElementById("vocabulary-tabs-content").querySelectorAll(".tab-pane")
    },
  }
  function changeTab(id) {
    // Deselect concept via Vue component (workaround)
    if (id !== 2 && window.selectConcept) {
      window.selectConcept(null)
    }
    lists.links.forEach((element, key) => {
      if (key === id) {
        element.classList.add("active")
        element.setAttribute("aria-selected", "true")
      } else {
        element.classList.remove("active")
        element.setAttribute("aria-selected", "false")
      }
    })
    lists.panes.forEach((element, key) => {
      if (key === id) {
        element.classList.add("show")
        element.classList.add("active")
      } else {
        element.classList.remove("show")
        element.classList.remove("active")
      }
    })
  }
  // Find empty panes and disable the associated link
  lists.panes.forEach((element, key) => {
    if (element.textContent.length === 0) {
      lists.links[key].classList.add("d-none")
    }
  })
  // Open specific tab on page load if necessary
  if (window.location.hash) {
    const index = Array.from(lists.links).findIndex(el => el.getAttribute("href") === window.location.hash)
    if (index != -1) {
      changeTab(index)
    }
  }
</script>
